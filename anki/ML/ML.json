{
    "__type__": "Deck", 
    "children": [], 
    "crowdanki_uuid": "0994f974-5ca9-11e7-8d85-8c705ab266f4", 
    "deck_config_uuid": "0994fc3a-5ca9-11e7-8d85-8c705ab266f4", 
    "deck_configurations": [
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "0994fc3a-5ca9-11e7-8d85-8c705ab266f4", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Default", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    4, 
                    7
                ], 
                "order": 1, 
                "perDay": 30, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 100
            }, 
            "timer": 0
        }
    ], 
    "desc": "", 
    "dyn": 0, 
    "extendNew": 10, 
    "extendRev": 50, 
    "media_files": [
        "latex-3c4fa3e7480b19dcebbd051b37a5a9de4e0e4af5.png", 
        "latex-5449911bcd2fc55e691c7445058833b8ac40e1c9.png"
    ], 
    "name": "ML", 
    "note_models": [
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n", 
            "flds": [
                {
                    "font": "Liberation Sans", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Basic", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "concept"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Card 1", 
                    "ord": 0, 
                    "qfmt": "{{Front}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }
    ], 
    "notes": [
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Machine Learning", 
                "- algorithms extract patterns from data<div>- learn mathematical model used to make intelligent decisions</div><div>- learning &amp; application phase</div>"
            ], 
            "flags": 0, 
            "guid": "qnRsl2oU(f", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Supervised Learning", 
                "- labeled training data:&nbsp;input &amp; desired output<div>- goal: predict output for unseen data</div>"
            ], 
            "flags": 0, 
            "guid": "e.n<yGvCG{", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Two types of supervised learning", 
                "- regression (continuous output)<div>- classification (discrete output)</div>"
            ], 
            "flags": 0, 
            "guid": "qZ!4:|O7B[", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Unsupervised learning", 
                "- unlabeled training data (unknown output)<br />"
            ], 
            "flags": 0, 
            "guid": "AB$o*=Gl[m", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Reinforcement learning", 
                "- state machine<div>- maximize reward at the end</div>"
            ], 
            "flags": 0, 
            "guid": "q=hYb_@$6M", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Difference between training &amp; test set", 
                "- training set is used to compute model<div>- test set is used to evaluate model</div>"
            ], 
            "flags": 0, 
            "guid": "bC]KHp5%Pm", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Learning rate&nbsp;[latex]\\alpha[/latex]", 
                "- step size when updating parameters<div>- too small: may get stuck in local optima, slow convergence</div><div>- too big: may skip over optima</div>"
            ], 
            "flags": 0, 
            "guid": "e%CPQr/CWh", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Naive Bayes Assumption", 
                "- assumption of independence of features given a label to simplify algorithm"
            ], 
            "flags": 0, 
            "guid": "t=@9CU8;|_", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Feature Vector", 
                "- input data for model<br /><div>- used to calculate output</div>"
            ], 
            "flags": 0, 
            "guid": "Km*SOB|OrN", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Feature Selection", 
                "- algorithm to select relevant subset of features available"
            ], 
            "flags": 0, 
            "guid": "FldI{(Iwu0", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "VC Dimension", 
                "- Size of the largest set that can be shattered by a hypothesis class H<div>- Used as complexity measure for models</div><div>- e.g. linear classification on 2d-feature vector: VC Dimension of 3</div>"
            ], 
            "flags": 0, 
            "guid": "puC9wk6zjH", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Generalization Error", 
                "- Expected error for examples not included in training data<div>- factors: bias &amp; variance</div>"
            ], 
            "flags": 0, 
            "guid": "p8osiW^T;P", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Bias", 
                "- Generalization Error for a model trained on very many or infinite examples<div>- too simple models<br /><div>- underfitting</div></div>"
            ], 
            "flags": 0, 
            "guid": "x$/OUuIaBP", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Variance", 
                "- Generalization Error resulting of inaccurate / small training set and/or too complex models<br /><div>- overfitting</div>"
            ], 
            "flags": 0, 
            "guid": "x~[^{j$}~,", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Support vectors", 
                "- Examples with the smallest margin (closest to the boundary)"
            ], 
            "flags": 0, 
            "guid": "gik||J=#VZ", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Functional margin", 
                "[$$]y^i(w^Tx^i+b)[/$$]<div>Describes confidence of prediction<br /></div>"
            ], 
            "flags": 0, 
            "guid": "K+kW`;/hWQ", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Geometric Margin", 
                "[$$]y^i((\\frac{w}{||w||})^Tx^i+(\\frac{b}{||w||}))[/$$]<div>Shortest possible geometric distance between point x and decision boundary&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "dhoX&m~QhZ", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Kernel trick", 
                "- making examples separable by mapping to larger dimensions<div>- combining mappings of two examples makes computing mappings cheaper</div>"
            ], 
            "flags": 0, 
            "guid": "PsZTN&Gc8#", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Markov property", 
                "- property of a stochastic process&nbsp;<div>- future state depends only on present state</div><div>- present state summarizes past states</div>"
            ], 
            "flags": 0, 
            "guid": "zn/w7^d<sN", 
            "note_model_uuid": "09951314-5ca9-11e7-8d85-8c705ab266f4", 
            "tags": [
                "concept"
            ]
        }
    ]
}